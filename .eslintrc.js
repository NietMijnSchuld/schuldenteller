module.exports = {
    root: true,
    env: {
        browser: true,
        node: true
    },
    parser: "@typescript-eslint/parser",
    plugins: [
        "@typescript-eslint",
    ],
    extends: [
        "eslint:recommended",
        "plugin:@typescript-eslint/recommended",
    ],
    rules: {
        // Vanilla ESLint rules
        "array-bracket-newline": ["error", "consistent"],
        "array-callback-return": ["error", { checkForEach: false }],
        "arrow-spacing": ["error", { before: true, after: true }],
        "comma-style": ["error", "last"],
        "default-case-last": "error",
        "dot-location": ["error", "property"],
        "eol-last": "error",
        "linebreak-style": ["error", "unix"],
        "max-classes-per-file": ["error", 1],
        "max-depth": ["error", 4],
        "no-alert": "error",
        "no-await-in-loop": "error",
        "no-caller": "error",
        "no-case-declarations": "error",
        "no-console": "error",
        "no-constructor-return": "error",
        "no-duplicate-imports": "error",
        "no-empty-function": "error",
        "no-eq-null": "error",
        "no-eval": "error",
        "no-extend-native": "error",
        "no-extra-bind": "error",
        "no-extra-label": "error",
        "no-floating-decimal": "error",
        "no-global-assign": "error",
        "no-implicit-globals": "error",
        "no-implied-eval": "error",
        "no-iterator": "error",
        "no-labels": "error",
        "no-lone-blocks": "error",
        "no-multi-assign": "error",
        "no-multi-spaces": "error",
        "no-multi-str": "error",
        "no-multiple-empty-lines": ["error", { max: 2, maxEOF: 0 }],
        "no-new-func": "error",
        "no-octal-escape": "error",
        "no-octal": "error",
        "no-param-reassign": "error",
        "no-promise-executor-return": "error",
        "no-proto": "error",
        "no-restricted-imports": ["error", { patterns: ["./*", "../*", "!./data", "!./responses"] }],
        "no-return-assign": "error",
        "no-script-url": "error",
        "no-self-compare": "error",
        "no-sequences": "error",
        "no-template-curly-in-string": "error",
        "no-throw-literal": "error",
        "no-trailing-spaces": "error",
        "no-unreachable-loop": "error",
        "no-useless-call": "error",
        "no-useless-concat": "error",
        "no-useless-return": "error",
        "no-var": "error",
        "no-void": "error",
        "no-warning-comments": "warn",
        "no-whitespace-before-property": "error",
        "object-curly-spacing": ["error", "always"],
        "prefer-arrow-callback": "error",
        "prefer-const": "error",
        "prefer-template": "error",
        "quote-props": ["error", "as-needed"],
        quotes: ["error", "double"],
        "require-await": "error",
        "semi-spacing": ["error", { before: false, after: true }],
        "space-in-parens": ["error", "always"],
        "template-curly-spacing": ["error", "never"],
        "vars-on-top": "error",
        "wrap-iife": "error",
        complexity: ["error", 20],
        curly: "error",
        eqeqeq: "error",
        indent: ["error", 4, { SwitchCase: 1 }],
        semi: ["error", "never"],
        yoda: ["error", "never", { exceptRange: true }],

        // Typescript rules
        "@typescript-eslint/array-type": ["error", { default: "array-simple" }],
        "@typescript-eslint/consistent-type-assertions": ["error", { assertionStyle: "as" }],
        "@typescript-eslint/consistent-type-definitions": ["error", "type"],
        "@typescript-eslint/explicit-function-return-type": ["error", { allowExpressions: true }],
        "@typescript-eslint/explicit-module-boundary-types": "error",
        "@typescript-eslint/member-delimiter-style": ["error", { multiline: { delimiter: "none" } }],
        "@typescript-eslint/no-empty-function": "off",
        "@typescript-eslint/no-empty-interface": "off",
        "@typescript-eslint/no-explicit-any": "error",
        "@typescript-eslint/no-non-null-assertion": "off",
        "@typescript-eslint/no-unused-vars": "error",
        "@typescript-eslint/promise-function-async": "off",
        "@typescript-eslint/type-annotation-spacing": "error",
    }
}
